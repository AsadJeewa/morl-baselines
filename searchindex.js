Search.setIndex({"docnames": ["algos/algorithms", "algos/multi_policy", "algos/multi_policy/envelope", "algos/multi_policy/gpi_pd", "algos/multi_policy/linear_support", "algos/multi_policy/mp_mo_q_learning", "algos/multi_policy/pareto_q_learning", "algos/multi_policy/pcn", "algos/multi_policy/pgmorl", "algos/performances", "algos/single_policy", "algos/single_policy/eupg", "algos/single_policy/moq_learning", "community/community", "features/buffers", "features/evaluations", "features/misc", "features/networks", "features/pareto", "features/performance_indicators", "features/scalarization", "index", "quickstart/overview"], "filenames": ["algos/algorithms.md", "algos/multi_policy.md", "algos/multi_policy/envelope.md", "algos/multi_policy/gpi_pd.md", "algos/multi_policy/linear_support.md", "algos/multi_policy/mp_mo_q_learning.md", "algos/multi_policy/pareto_q_learning.md", "algos/multi_policy/pcn.md", "algos/multi_policy/pgmorl.md", "algos/performances.md", "algos/single_policy.md", "algos/single_policy/eupg.md", "algos/single_policy/moq_learning.md", "community/community.md", "features/buffers.md", "features/evaluations.md", "features/misc.md", "features/networks.md", "features/pareto.md", "features/performance_indicators.md", "features/scalarization.md", "index.md", "quickstart/overview.md"], "titles": ["Overview", "Multi-Policy Algorithms", "Envelope Q-Learning", "GPI-Prioritized Dyna", "Linear Support", "MPMOQ Learning", "Pareto Q-Learning", "Pareto Conditioned Networks", "PGMORL", "Performance assessments", "Single-policy Algorithms", "EUPG", "MOQ-Learning", "Community", "Replay Buffers", "Evaluations", "Miscellaneous", "Neural Networks helpers", "Pareto utils", "Performance indicators", "Scalarization functions", "MORL-Baselines: A collection of multi-objective reinforcement learning algorithms.", "Overview"], "terms": {"morl": [0, 9, 13, 16, 19, 22], "baselin": [0, 13, 16, 22], "contain": [0, 14, 16, 21, 22], "multipl": [0, 8, 14, 15], "implement": [0, 8, 9, 13, 14, 21, 22], "multi": [0, 8, 16, 17, 19, 22], "object": [0, 8, 9, 16, 19], "reinforc": [0, 9, 14, 17], "learn": [0, 8, 9, 13, 14, 17], "algorithm": [0, 8, 13, 14, 19, 22], "The": [0, 8, 9, 14, 16, 17, 18, 21, 22], "follow": [0, 9, 14, 16, 17, 21, 22], "tabl": [0, 9], "list": [0, 9, 14, 16, 17, 19], "ar": [0, 8, 9, 13, 14, 16, 18, 19, 21], "current": [0, 8, 9, 13, 14, 16, 17, 19, 21], "name": 0, "singl": [0, 21, 22], "polici": [0, 15, 16, 19, 21, 22], "esr": [0, 14, 15, 21, 22], "ser": [0, 21, 22], "observ": [0, 8, 14, 17], "space": [0, 8, 9, 16], "action": [0, 8, 14], "paper": [0, 8, 9, 17, 19, 21], "gpi": 0, "l": [0, 9, 19], "pd": 0, "continu": [0, 8, 9], "discret": 0, "supplementari": 0, "materi": 0, "envelop": 0, "q": [0, 13], "pgmorl": [0, 9, 19], "1": [0, 9, 14, 16], "pareto": [0, 8, 9, 13, 16, 19, 21], "condit": [0, 15], "network": [0, 8, 16], "pcn": 0, "2": [0, 8, 9, 14], "mo": [0, 9, 15, 21, 22], "mpmoqlearn": 0, "outer": 0, "loop": 0, "moql": 0, "optimist": 0, "linear": 0, "support": [0, 8, 9], "ol": 0, "section": [0, 8], "3": [0, 8, 9, 21], "thesi": 0, "expect": [0, 9, 16, 19], "util": [0, 9, 15, 16, 17, 19, 21], "gradient": 0, "eupg": [0, 13], "warn": [0, 9], "have": [0, 9, 13, 16, 18, 21], "been": [0, 8, 16, 18, 21], "benchmark": 0, "yet": [0, 8], "some": [0, 8, 9, 19], "them": [0, 9, 13], "limit": 0, "featur": [0, 13, 17], "i": [0, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "environ": [0, 9, 15, 21, 22], "assum": 0, "determinist": 0, "transit": [0, 14], "code": [8, 14, 18, 21], "thi": [8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22], "ha": [8, 16], "adapt": [8, 20], "from": [8, 9, 13, 14, 16, 17, 19, 21], "origin": [8, 9, 13, 21], "provid": [8, 9, 13, 14, 16, 18, 21], "author": [8, 21], "github": [8, 14, 21], "now": 8, "post": 8, "process": [8, 16], "phase": 8, "analysi": [8, 9], "stage": 8, "reli": [8, 9, 19, 20], "ppo": 8, "agent": [8, 9, 15, 16], "look": 8, "variou": [8, 9, 13, 19, 21], "tradeoff": 8, "keep": 8, "popul": 8, "along": [8, 9], "perform": [8, 21], "At": 8, "each": [8, 9, 14, 17, 19, 20], "iter": [8, 16], "select": 8, "few": 8, "best": [8, 20], "assign": 8, "vector": [8, 15, 16, 17, 18, 19, 20], "us": [8, 9, 14, 16, 17, 19, 22], "train": [8, 9, 16], "further": 8, "base": [8, 9, 19], "comput": [8, 9, 14, 16, 19], "histor": 8, "data": [8, 14], "gather": 8, "dure": 8, "our": [8, 9, 13, 21], "essenti": 8, "refactor": 8, "cleanrl": [8, 21], "main": [8, 13, 14, 16], "differ": [8, 21], "valu": [8, 9, 14, 15, 16, 19, 20], "return": [8, 9, 14, 15, 16, 18, 19, 20, 21], "scalar": [8, 9, 15, 16], "sum": [8, 20], "given": [8, 14, 16], "note": 8, "might": 8, "possibl": [8, 9, 22], "enhanc": 8, "someth": 8, "els": 8, "than": 8, "see": [8, 22], "more": [8, 22], "detail": [8, 21, 22], "document": [9, 21, 22], "work": 9, "progress": 9, "To": 9, "ensur": 9, "correct": 9, "we": [9, 13, 14, 19, 21], "want": [9, 13], "test": [9, 21], "For": [9, 21], "sake": 9, "reproduc": [9, 16], "run": [9, 15, 21], "10": 9, "seed": [9, 16], "mainten": 9, "purpos": 9, "long": 9, "term": 9, "conduct": 9, "avail": [9, 14, 21], "gymnasium": [9, 15, 21, 22], "henc": 9, "abl": 9, "were": 9, "present": 9, "evalu": [9, 16, 18], "env": [9, 15, 16], "keyword": 9, "eval": 9, "scalarized_return": 9, "scalarized_discounted_return": 9, "propos": 9, "qualiti": [9, 19], "discount": [9, 15], "front": [9, 16, 18, 19], "pf": [9, 19], "convex": 9, "coverag": 9, "set": [9, 14, 16, 18, 19, 22], "cc": 9, "In": 9, "gener": [9, 16, 19], "converg": 9, "divers": 9, "hybrid": 9, "both": [9, 21], "common": [9, 14, 15, 16, 17, 18, 19, 20, 22], "performance_ind": [9, 19], "sparsiti": [9, 16, 19], "averag": [9, 15, 16, 19], "distanc": [9, 14, 16, 19], "between": [9, 19], "consecut": 9, "point": [9, 16, 18, 19, 20], "igd": [9, 16, 19], "sota": 9, "optim": [9, 19, 21], "moo": [9, 19], "literatur": 9, "It": [9, 16, 17, 20, 21], "requir": [9, 19, 20], "can": [9, 13, 21], "posteriori": 9, "That": [9, 16], "do": 9, "merg": 9, "all": [9, 13, 14, 16, 18, 21, 22], "found": [9, 21], "method": [9, 14, 16], "respect": 9, "hypervolum": [9, 16, 19], "moreov": 9, "assumpt": [9, 15], "function": [9, 14, 15, 16, 17, 18, 19, 21], "user": 9, "These": [9, 14], "allow": 9, "an": [9, 13, 16, 17], "idea": [9, 13], "true": [9, 14, 16, 19], "wherea": 9, "other": [9, 14, 21], "eum": [9, 16, 19], "mul": [9, 16, 19], "maximum": [9, 14, 16, 19], "loss": [9, 16, 19], "problem": [9, 19], "know": [9, 14, 19], "number": [9, 14, 15, 16, 17], "equal": [9, 16], "weight": [9, 15, 16, 19, 20, 21], "simplex": [9, 16], "50": [9, 16], "default": [9, 14, 15, 16, 19], "chang": [9, 18], "final": [9, 16], "also": [9, 13, 16], "log": [9, 16], "wandb": [9, 16, 21], "here": [9, 13, 21], "morl_baselin": [9, 14, 15, 16, 17, 18, 19, 20, 21], "log_all_multi_policy_metr": [9, 16], "current_front": [9, 16], "ndarrai": [9, 15, 16, 17, 18, 19, 20], "hv_ref_point": [9, 16], "reward_dim": [9, 16, 20], "int": [9, 14, 15, 16, 17, 19, 20], "global_step": [9, 16], "writer": [9, 16], "summarywrit": [9, 16], "n_sample_weight": [9, 16], "ref_front": [9, 16], "none": [9, 14, 15, 16], "If": [9, 13, 14, 16], "invert": [9, 16, 19], "paramet": [9, 14, 15, 16, 17, 18, 19, 20, 21], "approxim": [9, 16, 19], "step": [9, 16], "global": [9, 16], "sampl": [9, 14, 16], "known": [9, 16, 19], "offici": 9, "sent": 9, "openrlbenchmark": [9, 21], "api": [9, 21], "queri": 9, "plot": 9, "result": [9, 21], "format": [9, 21], "life": 9, "good": 9, "when": [9, 14], "full": [9, 14], "flow": 9, "autom": 9, "cli": 9, "configur": 9, "accordingli": 9, "locat": 9, "launch_experi": 9, "py": 9, "below": [9, 14], "which": [9, 14, 16, 17, 18, 21], "issu": [9, 13], "track": [9, 21], "j": 9, "xu": 9, "y": 9, "tian": 9, "p": [9, 19], "ma": 9, "d": [9, 19], "ru": 9, "": [9, 14, 16, 21, 22], "sueda": 9, "w": [9, 15], "matusik": 9, "predict": [9, 17], "guid": [9, 21], "robot": 9, "control": [9, 17], "proceed": 9, "37th": 9, "intern": 9, "confer": 9, "machin": 9, "nov": 9, "2020": 9, "pp": 9, "10607": 9, "10616": 9, "http": [9, 14, 16, 18, 21], "mlr": 9, "press": 9, "v119": 9, "xu20h": 9, "html": [9, 16], "c": 9, "hay": [9, 13], "et": [9, 16, 17], "al": [9, 16, 17], "A": [9, 14, 16, 19], "practic": [9, 21], "plan": [9, 21], "autonom": 9, "system": 9, "vol": 9, "36": 9, "apr": 9, "2022": [9, 21], "doi": 9, "1007": 9, "s10458": 9, "022": 9, "09552": 9, "m": [9, 19], "zintgraf": [9, 19], "t": [9, 19], "v": [9, 19], "kanter": [9, 19], "roijer": [9, 19], "f": [9, 13, 19], "oliehoek": [9, 19], "beau": [9, 19], "approach": [9, 19], "2015": [9, 16, 17, 19], "discord": 13, "server": 13, "where": 13, "you": 13, "ask": 13, "question": [13, 18], "get": [13, 14], "help": 13, "repositori": [13, 21], "join": 13, "florian": [13, 21], "felten": [13, 21], "ffelten": 13, "luca": [13, 21], "n": [13, 14, 16, 21], "alegr": [13, 21], "lucasalegr": [13, 21], "open": [13, 21], "alwai": [13, 20], "happi": 13, "receiv": 13, "new": [13, 14], "bug": 13, "fix": 13, "discuss": 13, "your": 13, "u": 13, "pull": 13, "request": 13, "directli": 13, "asid": 13, "contributor": 13, "mani": 13, "peopl": 13, "who": 13, "project": 13, "wai": [13, 14], "would": 13, "like": 13, "thank": 13, "willem": 13, "r\u00f6pke": 13, "hi": 13, "wilrop": 13, "deni": 13, "steckelmach": 13, "conor": 13, "librari": [14, 21], "class": [14, 17, 18], "replaybuff": 14, "obs_shap": 14, "action_dim": 14, "rew_dim": 14, "max_siz": 14, "100000": 14, "obs_dtyp": 14, "numpi": [14, 15, 19, 20, 21], "float32": 14, "action_dtyp": 14, "add": [14, 18], "ob": 14, "next_ob": 14, "done": 14, "experi": [14, 21], "next": 14, "get_all_data": 14, "max_sampl": 14, "specifi": 14, "tupl": [14, 15], "batch_siz": 14, "replac": 14, "use_c": 14, "fals": [14, 15, 17], "to_tensor": 14, "devic": 14, "batch": 14, "size": [14, 16], "whether": [14, 15, 16, 17], "cer": 14, "convert": 14, "pytorch": [14, 21], "tensor": [14, 16, 17], "sample_ob": 14, "diverse_buff": 14, "diversememori": 14, "main_capac": 14, "sec_capac": 14, "0": [14, 16, 17], "trace_divers": 14, "bool": [14, 15, 16, 17, 19], "crowding_divers": 14, "value_funct": 14, "lambda": 14, "e": [14, 15, 19, 21], "float": [14, 15, 16, 17, 19, 20], "01": [14, 16], "integr": 14, "secondari": 14, "extract": 14, "com": [14, 18, 21], "axelabel": 14, "dynmorl": 14, "error": 14, "trace_id": 14, "pred_idx": 14, "tree_id": 14, "prioriti": [14, 16], "proport": 14, "its": [14, 19], "same": 14, "id": [14, 16], "treat": 14, "trace": 14, "determin": 14, "store": 14, "identifi": 14, "tree": 14, "relev": 14, "index": 14, "node": 14, "wa": 14, "add_sampl": 14, "write": 14, "previou": 14, "dictionari": [14, 16], "add_tre": 14, "dupe": 14, "trg_i": 14, "src_i": 14, "copi": 14, "target": [14, 16], "sourc": [14, 18], "extract_trac": 14, "start": 14, "end": 14, "posit": 14, "indic": [14, 18], "those": 14, "arrai": [14, 16, 18, 21], "get_data": 14, "include_indic": 14, "includ": 14, "get_error": 14, "idx": 14, "correspond": 14, "updat": [14, 16], "get_sec_writ": 14, "secondary_trac": 14, "reserved_idx": 14, "find": 14, "free": 14, "spot": 14, "memori": [14, 18], "recurs": 14, "remov": [14, 18], "past": 14, "low": 14, "crowd": 14, "get_trace_valu": 14, "trace_tupl": 14, "appli": 14, "main_mem_is_ful": 14, "becaus": 14, "circular": 14, "fill": [14, 16], "check": 14, "suffici": 14, "move_to_sec": 14, "move": 14, "span": 14, "remove_trac": 14, "whose": 14, "should": [14, 16], "pair": 14, "sec_dist": 14, "give": 14, "prioritized_buff": 14, "prioritizedreplaybuff": 14, "min_prior": [14, 16], "1e": 14, "05": 14, "update_prior": 14, "accrued_reward_buff": 14, "accruedrewardreplaybuff": 14, "action_shap": 14, "accrued_reward": 14, "cleanup": 14, "whole": 14, "order": 14, "element": [14, 16, 18], "relat": 15, "eval_mo": 15, "dot": [15, 19, 20], "render": [15, 16], "one": [15, 16, 19], "episod": [15, 16], "linearreward": 15, "wrapper": 15, "take": 15, "reward": [15, 20, 21], "np": [15, 16, 19], "option": 15, "eval_mo_reward_condit": 15, "make": 15, "accru": 15, "policy_evaluation_mo": 15, "rep": 15, "5": 15, "avg": 15, "equally_spaced_weight": 16, "dim": 16, "42": 16, "riesz": 16, "energi": 16, "pymoo": [16, 19], "org": 16, "misc": [16, 21], "reference_direct": 16, "random": 16, "extrema_weight": 16, "extrema": 16, "rest": 16, "get_grad_norm": 16, "param": 16, "how": 16, "grad": 16, "norm": 16, "insid": 16, "torch": [16, 17], "nn": [16, 17], "clip_grad_norm_": 16, "huber": 16, "x": 16, "input": [16, 17, 18], "minimum": 16, "layer_init": 16, "layer": [16, 17], "orthogon": 16, "weight_gain": 16, "bias_const": 16, "initi": 16, "gain": 16, "constant": 16, "bia": 16, "linearly_decaying_valu": 16, "initial_valu": 16, "decay_period": 16, "warmup_step": 16, "final_valu": 16, "linearli": 16, "decai": 16, "natur": [16, 17], "dqn": [16, 17], "schedul": 16, "epsilon": 16, "mnih": [16, 17], "begin": 16, "until": 16, "taken": 16, "period": 16, "over": 16, "complet": 16, "so": [16, 20], "far": [16, 20], "befor": 16, "accord": 16, "metric": [16, 19], "refer": [16, 19, 20], "log_episode_info": 16, "info": 16, "dict": 16, "global_timestep": 16, "verbos": 16, "inform": 16, "last": 16, "automat": [16, 20, 21], "recordstatisticswrapp": 16, "statist": 16, "timestep": 16, "print": 16, "make_gif": 16, "fullpath": 16, "str": [16, 19], "fp": 16, "length": [16, 17], "300": 16, "save": 16, "gif": 16, "polyak_upd": 16, "target_param": 16, "tau": [16, 20], "polyak": 16, "coeffici": 16, "usual": 16, "small": 16, "random_weight": 16, "dist": 16, "dirichlet": 16, "rng": 16, "normal": [16, 17], "gaussian": 16, "distribut": 16, "alpha": 16, "either": 16, "equival": 16, "uniformli": 16, "seed_everyth": 16, "call": 16, "onli": [16, 19, 21], "onc": 16, "per": [16, 17], "python": [16, 18], "prefer": 16, "script": 16, "effect": 16, "state": [16, 19], "care": 16, "unique_tol": 16, "tol": 16, "0001": 16, "uniqu": 16, "within": 16, "toler": 16, "naturecnn": 17, "observation_shap": 17, "features_dim": 17, "512": 17, "cnn": 17, "volodymyr": 17, "human": 17, "level": 17, "through": 17, "deep": 17, "518": 17, "7540": 17, "529": 17, "533": 17, "forward": 17, "mlp": 17, "input_dim": 17, "output_dim": 17, "net_arch": 17, "type": [17, 19], "activation_fn": 17, "modul": 17, "activ": 17, "relu": 17, "drop_rat": 17, "layer_norm": 17, "sequenti": 17, "creat": 17, "perceptron": 17, "collect": 17, "fulli": 17, "connect": 17, "dimens": [17, 20], "output": 17, "architectur": 17, "net": [17, 22], "repres": 17, "unit": 17, "after": 17, "dropout": 17, "rate": 17, "paretoarch": 18, "archiv": 18, "candid": 18, "ineffici": 18, "get_non_domin": 18, "non": 18, "domin": [18, 20], "subset": 18, "stackoverflow": 18, "32791911": 18, "fast": 18, "calcul": 18, "answer": 18, "wrong": 18, "import": 18, "made": [18, 19], "get_non_dominated_ind": 18, "solut": 18, "boolean": 18, "rl": [19, 21], "mostli": 19, "axiomat": 19, "hv": 19, "customli": 19, "expected_util": 19, "weights_set": 19, "callabl": [19, 20], "similar": 19, "r": 19, "But": 19, "need": 19, "assess": 19, "product": [19, 20], "ref_point": 19, "_supportsarrai": 19, "dtype": 19, "ani": 19, "_nestedsequ": 19, "complex": 19, "byte": 19, "known_front": 19, "current_estim": 19, "nearest": 19, "maximum_utility_loss": 19, "reference_set": 19, "g": [19, 21], "basic": 19, "tchebicheff": 20, "seen": 20, "compon": 20, "sure": 20, "weighted_sum": 20, "aim": 21, "reliabl": 21, "strictli": 21, "standard": 21, "mdp": 21, "momdp": 21, "definit": 21, "suggest": 21, "read": 21, "under": 21, "criteria": 21, "report": 21, "bias": 21, "dashboard": 21, "lint": 21, "enforc": 21, "pre": 21, "commit": 21, "hook": 21, "well": 21, "prune": 21, "buffer": [21, 22], "etc": [21, 22], "against": 21, "ones": 21, "hyper": 21, "particip": 21, "popular": 21, "stabl": 21, "ai": 21, "titl": 21, "year": 21, "publish": 21, "journal": 21, "howpublish": 21, "url": 21, "As": 22, "much": 22, "repo": 22, "tri": 22, "file": 22, "rule": 22, "structur": 22, "exampl": 22, "recur": 22, "concept": 22, "replai": 22, "neural": 22, "multi_polici": 22, "single_polici": 22}, "objects": {"morl_baselines.common.accrued_reward_buffer": [[14, 0, 1, "", "AccruedRewardReplayBuffer"]], "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer": [[14, 1, 1, "", "add"], [14, 1, 1, "", "cleanup"], [14, 1, 1, "", "get_all_data"], [14, 1, 1, "", "sample"]], "morl_baselines.common.buffer": [[14, 0, 1, "", "ReplayBuffer"]], "morl_baselines.common.buffer.ReplayBuffer": [[14, 1, 1, "", "add"], [14, 1, 1, "", "get_all_data"], [14, 1, 1, "", "sample"], [14, 1, 1, "", "sample_obs"]], "morl_baselines.common.diverse_buffer": [[14, 0, 1, "", "DiverseMemory"]], "morl_baselines.common.diverse_buffer.DiverseMemory": [[14, 1, 1, "", "add"], [14, 1, 1, "", "add_sample"], [14, 1, 1, "", "add_tree"], [14, 1, 1, "", "dupe"], [14, 1, 1, "", "extract_trace"], [14, 1, 1, "", "get"], [14, 1, 1, "", "get_data"], [14, 1, 1, "", "get_error"], [14, 1, 1, "", "get_sec_write"], [14, 1, 1, "", "get_trace_value"], [14, 1, 1, "", "main_mem_is_full"], [14, 1, 1, "", "move_to_sec"], [14, 1, 1, "", "remove_trace"], [14, 1, 1, "", "sample"], [14, 1, 1, "", "sec_distances"], [14, 1, 1, "", "update"]], "morl_baselines.common": [[15, 2, 0, "-", "evaluation"], [17, 2, 0, "-", "networks"], [18, 2, 0, "-", "pareto"], [19, 2, 0, "-", "performance_indicators"], [20, 2, 0, "-", "scalarization"], [16, 2, 0, "-", "utils"]], "morl_baselines.common.evaluation": [[15, 3, 1, "", "eval_mo"], [15, 3, 1, "", "eval_mo_reward_conditioned"], [15, 3, 1, "", "policy_evaluation_mo"]], "morl_baselines.common.networks": [[17, 0, 1, "", "NatureCNN"], [17, 3, 1, "", "mlp"]], "morl_baselines.common.networks.NatureCNN": [[17, 1, 1, "", "forward"]], "morl_baselines.common.pareto": [[18, 0, 1, "", "ParetoArchive"], [18, 3, 1, "", "get_non_dominated"], [18, 3, 1, "", "get_non_dominated_inds"]], "morl_baselines.common.pareto.ParetoArchive": [[18, 1, 1, "", "add"]], "morl_baselines.common.performance_indicators": [[19, 3, 1, "", "expected_utility"], [19, 3, 1, "", "hypervolume"], [19, 3, 1, "", "igd"], [19, 3, 1, "", "maximum_utility_loss"], [19, 3, 1, "", "sparsity"]], "morl_baselines.common.prioritized_buffer": [[14, 0, 1, "", "PrioritizedReplayBuffer"]], "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer": [[14, 1, 1, "", "add"], [14, 1, 1, "", "get_all_data"], [14, 1, 1, "", "sample"], [14, 1, 1, "", "sample_obs"], [14, 1, 1, "", "update_priorities"]], "morl_baselines.common.scalarization": [[20, 3, 1, "", "tchebicheff"], [20, 3, 1, "", "weighted_sum"]], "morl_baselines.common.utils": [[16, 3, 1, "", "equally_spaced_weights"], [16, 3, 1, "", "extrema_weights"], [16, 3, 1, "", "get_grad_norm"], [16, 3, 1, "", "huber"], [16, 3, 1, "", "layer_init"], [16, 3, 1, "", "linearly_decaying_value"], [16, 3, 1, "", "log_all_multi_policy_metrics"], [16, 3, 1, "", "log_episode_info"], [16, 3, 1, "", "make_gif"], [16, 3, 1, "", "polyak_update"], [16, 3, 1, "", "random_weights"], [16, 3, 1, "", "seed_everything"], [16, 3, 1, "", "unique_tol"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"]}, "titleterms": {"overview": [0, 22], "multi": [1, 9, 14, 21], "polici": [1, 9, 10], "algorithm": [1, 9, 10, 21], "envelop": 2, "q": [2, 6], "learn": [2, 5, 6, 12, 21], "gpi": 3, "priorit": [3, 14], "dyna": 3, "linear": 4, "support": 4, "mpmoq": 5, "pareto": [6, 7, 18], "condit": 7, "network": [7, 17], "pgmorl": 8, "applic": 8, "limit": 8, "principl": 8, "moppo": 8, "weight": 8, "gener": 8, "predict": 8, "model": 8, "perform": [9, 19], "assess": 9, "introduct": 9, "metric": 9, "singl": [9, 10], "storag": 9, "benchmark": [9, 21], "script": 9, "refer": 9, "eupg": 11, "moq": 12, "commun": 13, "maintain": 13, "contribut": 13, "acknowledg": 13, "replai": 14, "buffer": 14, "object": [14, 21], "divers": 14, "accru": 14, "reward": 14, "evalu": 15, "miscellan": 16, "neural": 17, "helper": 17, "util": 18, "indic": 19, "scalar": 20, "function": 20, "morl": 21, "baselin": 21, "A": 21, "collect": 21, "reinforc": 21, "featur": 21, "cite": 21}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Overview": [[0, "overview"], [22, "overview"]], "Multi-Policy Algorithms": [[1, "multi-policy-algorithms"]], "Envelope Q-Learning": [[2, "envelope-q-learning"]], "GPI-Prioritized Dyna": [[3, "gpi-prioritized-dyna"]], "Linear Support": [[4, "linear-support"]], "MPMOQ Learning": [[5, "mpmoq-learning"]], "Pareto Q-Learning": [[6, "pareto-q-learning"]], "Pareto Conditioned Networks": [[7, "pareto-conditioned-networks"]], "PGMORL": [[8, "pgmorl"], [8, "id1"]], "Applicability and limitations": [[8, "applicability-and-limitations"]], "Principle": [[8, "principle"]], "MOPPO": [[8, "moppo"]], "Weight generator - prediction model": [[8, "weight-generator-prediction-model"]], "Performance assessments": [[9, "performance-assessments"]], "Introduction": [[9, "introduction"]], "Metrics": [[9, "metrics"]], "Single-policy algorithms": [[9, "single-policy-algorithms"]], "Multi-policy algorithms": [[9, "multi-policy-algorithms"]], "Storage": [[9, "storage"]], "Benchmarking script": [[9, "benchmarking-script"]], "Algorithms": [[9, "algorithms"]], "References": [[9, "references"]], "Single-policy Algorithms": [[10, "single-policy-algorithms"]], "EUPG": [[11, "eupg"]], "MOQ-Learning": [[12, "moq-learning"]], "Community": [[13, "community"]], "Maintainers": [[13, "maintainers"]], "Contributing": [[13, "contributing"]], "Acknowledgements": [[13, "acknowledgements"]], "Replay Buffers": [[14, "replay-buffers"]], "Multi-Objective Replay Buffer": [[14, "multi-objective-replay-buffer"]], "Diverse Replay Buffer": [[14, "diverse-replay-buffer"]], "Prioritized Replay Buffer": [[14, "prioritized-replay-buffer"]], "Accrued Reward Replay Buffer": [[14, "accrued-reward-replay-buffer"]], "Evaluations": [[15, "module-morl_baselines.common.evaluation"]], "Miscellaneous": [[16, "module-morl_baselines.common.utils"]], "Neural Networks helpers": [[17, "module-morl_baselines.common.networks"]], "Pareto utils": [[18, "module-morl_baselines.common.pareto"]], "Performance indicators": [[19, "module-morl_baselines.common.performance_indicators"]], "Scalarization functions": [[20, "module-morl_baselines.common.scalarization"]], "MORL-Baselines: A collection of multi-objective reinforcement learning algorithms.": [[21, "morl-baselines-a-collection-of-multi-objective-reinforcement-learning-algorithms"]], "Features of MORL-Baselines": [[21, "features-of-morl-baselines"]], "Benchmarks": [[21, "benchmarks"]], "Citing MORL-Baselines": [[21, "citing-morl-baselines"]]}, "indexentries": {"log_all_multi_policy_metrics() (in module morl_baselines.common.utils)": [[9, "morl_baselines.common.utils.log_all_multi_policy_metrics"], [16, "morl_baselines.common.utils.log_all_multi_policy_metrics"]], "accruedrewardreplaybuffer (class in morl_baselines.common.accrued_reward_buffer)": [[14, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer"]], "diversememory (class in morl_baselines.common.diverse_buffer)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory"]], "prioritizedreplaybuffer (class in morl_baselines.common.prioritized_buffer)": [[14, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer"]], "replaybuffer (class in morl_baselines.common.buffer)": [[14, "morl_baselines.common.buffer.ReplayBuffer"]], "add() (morl_baselines.common.accrued_reward_buffer.accruedrewardreplaybuffer method)": [[14, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer.add"]], "add() (morl_baselines.common.buffer.replaybuffer method)": [[14, "morl_baselines.common.buffer.ReplayBuffer.add"]], "add() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.add"]], "add() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[14, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.add"]], "add_sample() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.add_sample"]], "add_tree() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.add_tree"]], "cleanup() (morl_baselines.common.accrued_reward_buffer.accruedrewardreplaybuffer method)": [[14, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer.cleanup"]], "dupe() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.dupe"]], "extract_trace() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.extract_trace"]], "get() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.get"]], "get_all_data() (morl_baselines.common.accrued_reward_buffer.accruedrewardreplaybuffer method)": [[14, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer.get_all_data"]], "get_all_data() (morl_baselines.common.buffer.replaybuffer method)": [[14, "morl_baselines.common.buffer.ReplayBuffer.get_all_data"]], "get_all_data() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[14, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.get_all_data"]], "get_data() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.get_data"]], "get_error() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.get_error"]], "get_sec_write() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.get_sec_write"]], "get_trace_value() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.get_trace_value"]], "main_mem_is_full() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.main_mem_is_full"]], "move_to_sec() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.move_to_sec"]], "remove_trace() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.remove_trace"]], "sample() (morl_baselines.common.accrued_reward_buffer.accruedrewardreplaybuffer method)": [[14, "morl_baselines.common.accrued_reward_buffer.AccruedRewardReplayBuffer.sample"]], "sample() (morl_baselines.common.buffer.replaybuffer method)": [[14, "morl_baselines.common.buffer.ReplayBuffer.sample"]], "sample() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.sample"]], "sample() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[14, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.sample"]], "sample_obs() (morl_baselines.common.buffer.replaybuffer method)": [[14, "morl_baselines.common.buffer.ReplayBuffer.sample_obs"]], "sample_obs() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[14, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.sample_obs"]], "sec_distances() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.sec_distances"]], "update() (morl_baselines.common.diverse_buffer.diversememory method)": [[14, "morl_baselines.common.diverse_buffer.DiverseMemory.update"]], "update_priorities() (morl_baselines.common.prioritized_buffer.prioritizedreplaybuffer method)": [[14, "morl_baselines.common.prioritized_buffer.PrioritizedReplayBuffer.update_priorities"]], "eval_mo() (in module morl_baselines.common.evaluation)": [[15, "morl_baselines.common.evaluation.eval_mo"]], "eval_mo_reward_conditioned() (in module morl_baselines.common.evaluation)": [[15, "morl_baselines.common.evaluation.eval_mo_reward_conditioned"]], "module": [[15, "module-morl_baselines.common.evaluation"], [16, "module-morl_baselines.common.utils"], [17, "module-morl_baselines.common.networks"], [18, "module-morl_baselines.common.pareto"], [19, "module-morl_baselines.common.performance_indicators"], [20, "module-morl_baselines.common.scalarization"]], "morl_baselines.common.evaluation": [[15, "module-morl_baselines.common.evaluation"]], "policy_evaluation_mo() (in module morl_baselines.common.evaluation)": [[15, "morl_baselines.common.evaluation.policy_evaluation_mo"]], "equally_spaced_weights() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.equally_spaced_weights"]], "extrema_weights() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.extrema_weights"]], "get_grad_norm() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.get_grad_norm"]], "huber() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.huber"]], "layer_init() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.layer_init"]], "linearly_decaying_value() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.linearly_decaying_value"]], "log_episode_info() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.log_episode_info"]], "make_gif() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.make_gif"]], "morl_baselines.common.utils": [[16, "module-morl_baselines.common.utils"]], "polyak_update() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.polyak_update"]], "random_weights() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.random_weights"]], "seed_everything() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.seed_everything"]], "unique_tol() (in module morl_baselines.common.utils)": [[16, "morl_baselines.common.utils.unique_tol"]], "naturecnn (class in morl_baselines.common.networks)": [[17, "morl_baselines.common.networks.NatureCNN"]], "forward() (morl_baselines.common.networks.naturecnn method)": [[17, "morl_baselines.common.networks.NatureCNN.forward"]], "mlp() (in module morl_baselines.common.networks)": [[17, "morl_baselines.common.networks.mlp"]], "morl_baselines.common.networks": [[17, "module-morl_baselines.common.networks"]], "paretoarchive (class in morl_baselines.common.pareto)": [[18, "morl_baselines.common.pareto.ParetoArchive"]], "add() (morl_baselines.common.pareto.paretoarchive method)": [[18, "morl_baselines.common.pareto.ParetoArchive.add"]], "get_non_dominated() (in module morl_baselines.common.pareto)": [[18, "morl_baselines.common.pareto.get_non_dominated"]], "get_non_dominated_inds() (in module morl_baselines.common.pareto)": [[18, "morl_baselines.common.pareto.get_non_dominated_inds"]], "morl_baselines.common.pareto": [[18, "module-morl_baselines.common.pareto"]], "expected_utility() (in module morl_baselines.common.performance_indicators)": [[19, "morl_baselines.common.performance_indicators.expected_utility"]], "hypervolume() (in module morl_baselines.common.performance_indicators)": [[19, "morl_baselines.common.performance_indicators.hypervolume"]], "igd() (in module morl_baselines.common.performance_indicators)": [[19, "morl_baselines.common.performance_indicators.igd"]], "maximum_utility_loss() (in module morl_baselines.common.performance_indicators)": [[19, "morl_baselines.common.performance_indicators.maximum_utility_loss"]], "morl_baselines.common.performance_indicators": [[19, "module-morl_baselines.common.performance_indicators"]], "sparsity() (in module morl_baselines.common.performance_indicators)": [[19, "morl_baselines.common.performance_indicators.sparsity"]], "morl_baselines.common.scalarization": [[20, "module-morl_baselines.common.scalarization"]], "tchebicheff() (in module morl_baselines.common.scalarization)": [[20, "morl_baselines.common.scalarization.tchebicheff"]], "weighted_sum() (in module morl_baselines.common.scalarization)": [[20, "morl_baselines.common.scalarization.weighted_sum"]]}})